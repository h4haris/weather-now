{"version":3,"sources":["components/SearchBox/SearchBox.jsx","components/WeatherCard/WeatherCard.jsx","components/App/App.jsx","index.js"],"names":["SearchBox","onSubmitClick","useState","city","form","setForm","APIKEY","e","a","preventDefault","alert","fetch","then","res","json","data","className","type","placeholder","name","onChange","value","target","handleChange","onClick","getWeatherData","WeatherCard","props","iconurl","cod","weather","icon","Fragment","sys","country","Date","toLocaleTimeString","Math","floor","main","temp","src","alt","srcset","description","temp_max","temp_min","humidity","pressure","visibility","wind","speed","deg","sunrise","sunset","message","App","state","handleSubmitClick","setState","this","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5719fb46.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport \"./SearchBox.css\";\n\nconst SearchBox = ({ onSubmitClick }) => {\n  const [form, setForm] = useState({\n    city: \"\",\n  });\n\n  // state = {\n  //   textEmpty: true,\n  // };\n\n  const APIKEY = \"a1fa4db70938102cc249c6f256af961a\";\n\n  async function getWeatherData(e) {\n    e.preventDefault();\n    if (form.city === \"\") {\n      onSubmitClick(null);\n      alert(\"City is required\");\n    } else {\n      const data = await fetch(\n        `https://api.openweathermap.org/data/2.5/weather?q=${form.city}&APPID=${APIKEY}`\n      )\n        .then((res) => res.json())\n        .then((data) => data);\n\n      onSubmitClick(data);\n    }\n  }\n\n  const handleChange = (e) => {\n    let value = e.target.value;\n\n    setForm({ ...form, city: value });\n\n    // this.setState({\n    //   textEmpty: !value,\n    // });\n  };\n\n  return (\n    // <div\n    //   className={`search-container ${\n    //     headerExpanded ? \"search-container-center\" : \"search-container-top\"\n    //   }`}\n    // >\n    <div className=\"search-container\">\n      <form>\n        <input\n          type=\"text\"\n          placeholder=\"City\"\n          name=\"city\"\n          className=\"search-input\"\n          onChange={(e) => handleChange(e)}\n        />\n        <button className=\"getweatherBtn\" onClick={(e) => getWeatherData(e)}>\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default SearchBox;\n","import React from \"react\";\nimport \"./WeatherCard.css\";\n\nfunction WeatherCard(props) {\n  const { data } = props; //Destructuring props.data\n  const iconurl =\n    \"http://openweathermap.org/img/wn/\" +\n    `${data.cod != 404 ? data.weather[0].icon : null}` +\n    \".png\";\n\n  return (\n    <div className=\"result-container\">\n      {data.cod != 404 ? (\n        <React.Fragment>\n          <div className=\"maincard\">\n            <span className=\"cardtitle\">\n              {data.name} , {data.sys.country}. Weather\n            </span>\n            <span className=\"cardsubtitle\">\n              As of {new Date().toLocaleTimeString()}\n            </span>\n\n            <h1>\n              {\" \"}\n              {Math.floor(data.main.temp - 273.15)}\n              <sup>o</sup>\n            </h1>\n            <span className=\"weather-main\">{data.weather[0].main}</span>\n            <img className=\"weather-icon\" src={iconurl} alt=\"\" srcset=\"\" />\n            <span className=\"weather-description\">\n              {\" \"}\n              {data.weather[0].description}\n            </span>\n          </div>\n          <div className=\"weatherdetails\">\n            <div className=\"section1\">\n              <table>\n                <tr>\n                  <td>\n                    <h4>High/Low</h4>\n                  </td>\n                  <td>\n                    <span>\n                      {Math.floor(data.main.temp_max - 273.15)}/\n                      {Math.floor(data.main.temp_min - 273.15)}\n                    </span>\n                  </td>\n                </tr>\n                {/* <tr>\n                  <td>\n                    <h4>Wind Direction</h4>\n                  </td>\n                  <td>\n                    <span>\n                      {data.wind.deg}\n                      <sup>o</sup> deg\n                    </span>\n                  </td>\n                </tr> */}\n                <tr>\n                  <td>\n                    <h4>Humidity</h4>\n                  </td>\n                  <td>\n                    <span>{data.main.humidity} %</span>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <h4>Pressure</h4>\n                  </td>\n                  <td>\n                    <span>{data.main.pressure} hPa</span>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <h4>Visibility</h4>\n                  </td>\n                  <td>\n                    <span>{data.visibility / 1000} Km</span>\n                  </td>\n                </tr>\n              </table>\n            </div>\n\n            <div className=\"section2\">\n              <table>\n                <tr>\n                  <td>\n                    <h4>Wind</h4>\n                  </td>\n                  <td>\n                    <span>{Math.floor((data.wind.speed * 18) / 5)} km/hr</span>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <h4>Wind Direction</h4>\n                  </td>\n                  <td>\n                    <span>\n                      {data.wind.deg}\n                      <sup>o</sup> deg\n                    </span>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <h4>Sunrise</h4>\n                  </td>\n                  <td>\n                    <span>\n                      {new Date(data.sys.sunrise * 1000).toLocaleTimeString()}\n                    </span>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <h4>Sunset</h4>\n                  </td>\n                  <td>\n                    <span>\n                      {new Date(data.sys.sunset * 1000).toLocaleTimeString()}\n                    </span>\n                  </td>\n                </tr>\n              </table>\n            </div>\n          </div>\n        </React.Fragment>\n      ) : (\n        <div className=\"maincard\">\n          <h2>{data.message}</h2>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default WeatherCard;\n","import React from \"react\";\nimport SearchBox from \"../SearchBox/SearchBox\";\nimport WeatherCard from \"../WeatherCard/WeatherCard\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  state = {\n    weather: null,\n  };\n\n  handleSubmitClick = (data) => {\n    this.setState({ weather: data });\n  };\n\n  render() {\n    const { weather } = this.state;\n    return (\n      <div className=\"App\">\n        <div className=\"weather-container\">\n          <span className=\"title\">Weather App</span>\n          <br />\n          {/* <img src=\"images/background.jfif\" alt=\"headerImage\" /> */}\n          <SearchBox onSubmitClick={this.handleSubmitClick} />\n\n          {weather ? <WeatherCard data={weather} /> : null}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App/App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}